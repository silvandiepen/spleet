$hex-group: (
    ('000', '00'),
    ('001', '01'),
    ('002', '02'),
    ('003', '03'),
    ('004', '04'),
    ('005', '05'),
    ('006', '06'),
    ('007', '07'),
    ('008', '08'),
    ('009', '09'),
    ('010', '0A'),
    ('011', '0B'),
    ('012', '0C'),
    ('013', '0D'),
    ('014', '0E'),
    ('015', '0F'),
    ('DEC', 'HX'),
    ('016', '10'),
    ('017', '11'),
    ('018', '12'),
    ('019', '13'),
    ('020', '14'),
    ('021', '15'),
    ('022', '16'),
    ('023', '17'),
    ('024', '18'),
    ('025', '19'),
    ('026', '1A'),
    ('027', '1B'),
    ('028', '1C'),
    ('029', '1D'),
    ('030', '1E'),
    ('031', '1F'),
    ('DEC', 'HX'),
    ('032', '20'),
    ('033', '21'),
    ('034', '22'),
    ('035', '23'),
    ('036', '24'),
    ('037', '25'),
    ('038', '26'),
    ('039', '27'),
    ('040', '28'),
    ('041', '29'),
    ('042', '2A'),
    ('043', '2B'),
    ('044', '2C'),
    ('045', '2D'),
    ('046', '2E'),
    ('047', '2F'),
    ('DEC', 'HX'),
    ('048', '30'),
    ('049', '31'),
    ('050', '32'),
    ('051', '33'),
    ('052', '34'),
    ('053', '35'),
    ('054', '36'),
    ('055', '37'),
    ('056', '38'),
    ('057', '39'),
    ('058', '3A'),
    ('059', '3B'),
    ('060', '3C'),
    ('061', '3D'),
    ('062', '3E'),
    ('063', '3F'),
    ('DEC', 'HX'),
    ('064', '40'),
    ('065', '41'),
    ('066', '42'),
    ('067', '43'),
    ('068', '44'),
    ('069', '45'),
    ('070', '46'),
    ('071', '47'),
    ('072', '48'),
    ('073', '49'),
    ('074', '4A'),
    ('075', '4B'),
    ('076', '4C'),
    ('077', '4D'),
    ('078', '4E'),
    ('079', '4F'),
    ('DEC', 'HX'),
    ('080', '50'),
    ('081', '51'),
    ('082', '52'),
    ('083', '53'),
    ('084', '54'),
    ('085', '55'),
    ('086', '56'),
    ('087', '57'),
    ('088', '58'),
    ('089', '59'),
    ('090', '5A'),
    ('091', '5B'),
    ('092', '5C'),
    ('093', '5D'),
    ('094', '5E'),
    ('095', '5F'),
    ('DEC', 'HX'),
    ('096', '60'),
    ('097', '61'),
    ('098', '62'),
    ('099', '63'),
    ('100', '64'),
    ('101', '65'),
    ('102', '66'),
    ('103', '67'),
    ('104', '68'),
    ('105', '69'),
    ('106', '6A'),
    ('107', '6B'),
    ('108', '6C'),
    ('109', '6D'),
    ('110', '6E'),
    ('111', '6F'),
    ('DEC', 'HX'),
    ('112', '70'),
    ('113', '71'),
    ('114', '72'),
    ('115', '73'),
    ('116', '74'),
    ('117', '75'),
    ('118', '76'),
    ('119', '77'),
    ('120', '78'),
    ('121', '79'),
    ('122', '7A'),
    ('123', '7B'),
    ('124', '7C'),
    ('125', '7D'),
    ('126', '7E'),
    ('127', '7F'),
    ('DEC', 'HX'),
    ('128', '80'),
    ('129', '81'),
    ('130', '82'),
    ('131', '83'),
    ('132', '84'),
    ('133', '85'),
    ('134', '86'),
    ('135', '87'),
    ('136', '88'),
    ('137', '89'),
    ('138', '8A'),
    ('139', '8B'),
    ('140', '8C'),
    ('141', '8D'),
    ('142', '8E'),
    ('143', '8F'),
    ('DEC', 'HX'),
    ('144', '90'),
    ('145', '91'),
    ('146', '92'),
    ('147', '93'),
    ('148', '94'),
    ('149', '95'),
    ('150', '96'),
    ('151', '97'),
    ('152', '98'),
    ('153', '99'),
    ('154', '9A'),
    ('155', '9B'),
    ('156', '9C'),
    ('157', '9D'),
    ('158', '9E'),
    ('159', '9F'),
    ('DEC', 'HX'),
    ('160', 'A0'),
    ('161', 'A1'),
    ('162', 'A2'),
    ('163', 'A3'),
    ('164', 'A4'),
    ('165', 'A5'),
    ('166', 'A6'),
    ('167', 'A7'),
    ('168', 'A8'),
    ('169', 'A9'),
    ('170', 'AA'),
    ('171', 'AB'),
    ('172', 'AC'),
    ('173', 'AD'),
    ('174', 'AE'),
    ('175', 'AF'),
    ('DEC', 'HX'),
    ('176', 'B0'),
    ('177', 'B1'),
    ('178', 'B2'),
    ('179', 'B3'),
    ('180', 'B4'),
    ('181', 'B5'),
    ('182', 'B6'),
    ('183', 'B7'),
    ('184', 'B8'),
    ('185', 'B9'),
    ('186', 'BA'),
    ('187', 'BB'),
    ('188', 'BC'),
    ('189', 'BD'),
    ('190', 'BE'),
    ('191', 'BF'),
    ('DEC', 'HX'),
    ('192', 'C0'),
    ('193', 'C1'),
    ('194', 'C2'),
    ('195', 'C3'),
    ('196', 'C4'),
    ('197', 'C5'),
    ('198', 'C6'),
    ('199', 'C7'),
    ('200', 'C8'),
    ('201', 'C9'),
    ('202', 'CA'),
    ('203', 'CB'),
    ('204', 'CC'),
    ('205', 'CD'),
    ('206', 'CE'),
    ('207', 'CF'),
    ('DEC', 'HX'),
    ('208', 'D0'),
    ('209', 'D1'),
    ('210', 'D2'),
    ('211', 'D3'),
    ('212', 'D4'),
    ('213', 'D5'),
    ('214', 'D6'),
    ('215', 'D7'),
    ('216', 'D8'),
    ('217', 'D9'),
    ('218', 'DA'),
    ('219', 'DB'),
    ('220', 'DC'),
    ('221', 'DD'),
    ('222', 'DE'),
    ('223', 'DF'),
    ('DEC', 'HX'),
    ('224', 'E0'),
    ('225', 'E1'),
    ('226', 'E2'),
    ('227', 'E3'),
    ('228', 'E4'),
    ('229', 'E5'),
    ('230', 'E6'),
    ('231', 'E7'),
    ('232', 'E8'),
    ('233', 'E9'),
    ('234', 'EA'),
    ('235', 'EB'),
    ('236', 'EC'),
    ('237', 'ED'),
    ('238', 'EE'),
    ('239', 'EF'),
    ('DEC', 'HX'),
    ('240', 'F0'),
    ('241', 'F1'),
    ('242', 'F2'),
    ('243', 'F3'),
    ('244', 'F4'),
    ('245', 'F5'),
    ('246', 'F6'),
    ('247', 'F7'),
    ('248', 'F8'),
    ('249', 'F9'),
    ('250', 'FA'),
    ('251', 'FB'),
    ('252', 'FC'),
    ('253', 'FD'),
    ('254', 'FE'),
    ('255', 'FF')
);

@function parseInt($string) {
    @if type-of($string) == 'number' {
        @return $string;
    }
    // Matrices
    $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
    $numbers: 0 1 2 3 4 5 6 7 8 9;

    // Result
    $result: 0;

    // Looping through all characters
    @for $i from 1 through str-length($string) {
        $character: str-slice($string, $i, $i);
        $index: index($strings, $character);

        @if not $index {
            @return false;
        }

        $number: nth($numbers, $index);
        $result: $result * 10 + $number;
    }

    @return $result;
}

@function hex-to-dec($hex) {
    $value: 0;

    @each $v in $hex-group {
        @if to-lower-case(nth($v, 2)) == to-lower-case($hex) {
            $value: nth($v, 1);
        }
    }
    @return parseInt($value);
}
@function dec-to-hex($hex) {
    @each $v in $hex-group {
        @if nth($v, 1) == $hex {
            $value: nth($v, 2);
        }
    }
    @return $value;
}

@function hexToRed($str) {
    $number: str-slice($str, 2, 3);
    @return hex-to-dec($number);
}

@function hexToGreen($str) {
    $number: str-slice($str, 4, 5);
    @return hex-to-dec($number);
}
@function hexToBlue($str) {
    $number: str-slice($str, 6, 7);
    @return hex-to-dec($number);
}

@function to-opacity($string, $opacity) {
    // @debug $string;

    $index: str-index($string, '#');

    @if $index > -1 {
        $hexColor: str-slice($string, $index, $index + 6);

        $red: hexToRed($hexColor);
        $green: hexToGreen($hexColor);
        $blue: hexToBlue($hexColor);
        @debug $green;
        @return rgb($red, $green, $blue, $opacity);
    } @else {
        @return $string;
    }
}
